import datetime
import discord
from discord.ext import commands, tasks
from config import settings, beta_settings
from luckerRole import LuckerRole
from economic import Economic
from meme_rus import Meme_Rus
from santa import SantaEvent


bot = commands.Bot(command_prefix=settings['prefix'], intents=discord.Intents.all(), help_command=None)

bot.add_cog(LuckerRole(bot))
bot.add_cog(Economic(bot))
bot.add_cog(Meme_Rus(bot))
#bot.add_cog(SantaEvent(bot))


@bot.event
async def on_ready():
    print(f'{datetime.datetime.now().strftime("%H:%M:%S")} | [INFO] Ready!')
    update_status.start()


@tasks.loop(minutes=1)
async def update_status():
    await bot.change_presence(
        activity=discord.Activity(type=discord.ActivityType.watching, name=f"{len(bot.guilds)} —Å–µ—Ä–≤–µ—Ä–æ–≤!"))


@bot.command()
async def help(context):
    embed = discord.Embed(title="–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞", description=f"`{settings['prefix']}send_meme <–æ–ø–∏—Å–∞–Ω–∏–µ –º–µ–º–∞>` + –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–∏–∫—Ä–µ–ø–ª—ë–Ω–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ - –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–º–∞"
                                                                       f"\n`{settings['prefix']}meme` - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –º–µ–º"
                                                                       f"\n`{settings['prefix']}meme <id –º–µ–º–∞>` - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–º —Å –Ω—É–∂–Ω—ã–º id"
                                                                       f"\n`{settings['prefix']}last_meme` - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ª–∏—Ç—ã–π –º–µ–º"
                                                                       f"\n`{settings['prefix']}top_meme` - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∞–º—ã–π –ª—É—á—à–∏–π –º–µ–º –±–æ—Ç–∞"
                                                                       f"\n"
                                                                       f"\n**–ù–æ–≤–∏–Ω–∫–∞!**"
                                                                       f"\n`{settings['prefix']}auto_meme` - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª, –≥–¥–µ –±—ã–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞, –¥–ª—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ –º–µ–º–∞ —Ä–∞–∑ –≤ 30 –º–∏–Ω—É—Ç"
                                                                       f"\n > **–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞**"
                                                                       f"\n`{settings['prefix']}auto_meme <#–∫–∞–Ω–∞–ª>` - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –∑–∞–¥–∞–Ω –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ, –¥–ª—è –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥–∞ –º–µ–º–∞ —Ä–∞–∑ –≤ 30 –º–∏–Ω—É—Ç"
                                                                       f"\n > **–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞**"
                                                                       f"\n`{settings['prefix']}stop_auto_meme` - –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–ø–æ—Å—Ç–∏–Ω–≥ –º–µ–º–æ–≤ –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ"
                                                                       f"\n > **–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞**",
                          color=0x42aaff)
    embed.set_footer(text="–≠—Ç–æ —Ä–∞–Ω–Ω—è—è –≤–µ—Ä—Å–∏—è –º–æ–µ–≥–æ –±–æ—Ç–∞, —Å–ø–∞—Å–∏–±–æ –∑–∞ –≤—ã–±–æ—Ä! üíó (EBOLA#1337)")
    await context.send(embed=embed)


@bot.event
async def on_command_error(context, exception):
    #if isinstance(exception, discord.ext.commands.errors.CommandNotFound):
    #    await context.send(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ :/ "
    #                       f"\n`{settings['prefix']}help` - —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞")
    if isinstance(exception, discord.ext.commands.errors.BadArgument):
        await context.reply(f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ :/ "
                    f"\n`{settings['prefix']}help` - —á—Ç–æ–±—ã –ø–æ–¥—Ä–æ–±–Ω–µ–µ —É–∑–Ω–∞—Ç—å –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞")


#@bot.command()
async def send_info_to_all_servers(ctx):
    if await bot.is_owner(ctx.author):
        for guild in bot.guilds:
            try:
                channel = guild.system_channel
                await channel.send("test")
            except Exception:
                pass


if settings["isBetaVersion"] is not True:
    bot.run(settings['token'])
else:
    bot.run(beta_settings['beta_token'])